service cloud.firestore {
  match /databases/{database}/documents {
// 管理者かどうか判断するカスタム関数
    function isOwner() {
    	return exists(/databases/$(database)/documents/owners/$(request.auth.uid));
    }

// 認可ユーザかどうか判断するカスタム関数
    function isFriend() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "user"
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "engineer";

    }

// 開発者かどうか判断するカスタム関数
    function isEngineer() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "engineer";
    }


// owners コレクションに対して適用されるルール
    match /owners/{document=**} {
      // Firestoreコンソール以外の書き込みや編集を拒否する
      allow read: if request.auth != null || isOwner();  // 認証済みユーザーとオーナーのみ読み込み可能
      allow write: if false; // SDKからの編集は常に拒否
    }

// user コレクションに対して適用されるルール
		match /users/{document=**} {
			// 読み込み：管理者 or 認証ユーザ
    	allow read: if isOwner() || request.auth != null;
      // 作成：管理者 or 認証ユーザは自分のレコードのみ
      allow create: if isOwner() || (request.auth.uid == request.resource.id);
      // 更新：管理者 or 自分のレコードのifFriend, bill以外
			allow update: if isOwner()
       || (
				request.resource.id == request.auth.uid
				 && (request.resource.data.isFriend != true)
         && !('bill' in request.resource.data)
       );
			// 削除：管理者
      allow delete: if isOwner();      
    }

// materials コレクションに対して適用されるルール
		match /materials/{document=**} {
    	allow read: if isFriend();  // 認証認可済みユーザーのみ読み込み可能
      allow write, read: if isOwner();  // 管理者はすべてのフィールドを更新可
      allow delete: if isOwner();  // 管理者はすべてのフィールドを更新可
    }

// products コレクションに対して適用されるルール
		match /products/{document=**} {
    	allow read: if isFriend();  // 認証認可済みユーザーのみ読み込み可能
      allow write, read: if isOwner();  // 管理者はすべてのフィールドを更新可
    }

// orders コレクションに対して適用されるルール
		match /orders/{orderId} {
    	allow read: if request.auth.uid == resource.data.userId || isOwner() || isEngineer();  // 自分の注文のみ閲覧可能      
      allow write: if isOwner();
      allow create: if isFriend() && resource.data.userId;  // 認証認可済みユーザーが自分の注文のみ作成可能 
    }
    
// updateTimestamp コレクションに対して適用されるルール
		match /updateTimestamp/{document=**} {
      allow read: if isOwner() || isFriend();
      allow update: if isOwner();
    }


// それ以外のコレクションに適用されるルール（通常のアクセスルールを設定）
    // match /{document=**} {
    //   allow write: if isOwner();  // 管理者はすべてのフィールドを更新可
    //   allow read: if isFriend();  // 認証認可済みユーザーのみ読み込み可能
    // }
    
  }
}
